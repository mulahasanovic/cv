---
import "../styles/global.css";
import PersonalDetails, {
  type PersonalDetailsProps,
} from "../components/PersonalDetails.astro";
import { Icon } from "astro-icon/components";
import Section from "../components/Section.astro";
import Entry, { type EntryProps } from "../components/Entry.astro";
import Skill, { Proficiency, type SkillProps } from "../components/Skill.astro";
import type { MarkdownInstance } from "astro";

function compareDates(
  date1: string | undefined,
  date2: string | undefined
): number {
  if (!date1 && !date2) {
    return 0; // Both dates are undefined, consider them equal
  }

  if (!date1) {
    return 1; // date1 is undefined, consider date2 greater
  }

  if (!date2) {
    return -1; // date2 is undefined, consider date1 greater
  }

  const [month1, year1] = date1.split("/");
  const [month2, year2] = date2.split("/");

  const date1Value = new Date(`${year1}-${month1}`);
  const date2Value =
    date2 === "present" ? new Date() : new Date(`${year2}-${month2}`);

  return date2Value.getTime() - date1Value.getTime();
}

const sortWorkExperience = (
  a: MarkdownInstance<EntryProps>,
  b: MarkdownInstance<EntryProps>
) => {
  const startDateComparison = compareDates(
    a.frontmatter.startDate,
    b.frontmatter.startDate
  );

  if (startDateComparison !== 0) {
    return startDateComparison;
  } else {
    return compareDates(a.frontmatter.endDate, b.frontmatter.endDate);
  }
};

const personalDetails: PersonalDetailsProps = {
  firstName: "Sead",
  lastName: "Mulahasanović",
  jobTitle: "Software Developer",
  phoneNumber: "+38762267917",
  emailAddress: "mulahasanovic@outlook.com",
  city: "Bugojno",
  country: "Bosnia and Herzegovina",
  personalWebsite: "sead.dev",
};
const skills: SkillProps[] = [
  { label: "React" },
  { label: "TypeScript" },
  { label: "JavaScript" },
  { label: "Node" },
  { label: "Next.js" },
  { label: "Astro" },
  { label: "Tailwind CSS" },
  { label: "Sass (SCSS)" },
  { label: "CSS" },
  { label: "PostgreSQL" },
  { label: "MySQL" },
  { label: "Redis" },
  { label: "Git" },
  { label: "API Development and integrations" },
  { label: "Progressive Web Apps (PWA)" },
  { label: "Responsive Web Design" },
  { label: "GraphQL" },
  { label: "Event Sourcing" },
  { label: "C#" },
  { label: "Unity" },
  { label: "C++" },
  { label: "PHP" },
  { label: "Java" },
  { label: "Spring Boot" },
  { label: "Project Management" },
];
const languages: SkillProps[] = [
  { label: "Bosnian", proficiency: Proficiency.Native },
  { label: "English", proficiency: Proficiency.Fluent },
];
const experiences = await Astro.glob<EntryProps>("../experiences/*.md");
experiences.sort(sortWorkExperience);

const internships = await Astro.glob<EntryProps>("../internships/*.md");
internships.sort(sortWorkExperience);

const education = await Astro.glob<EntryProps>("../education/*.md");
education.sort(sortWorkExperience);

const projects = await Astro.glob<EntryProps>("../projects/*.md");
projects.sort(sortWorkExperience);

const pageTitle = `${personalDetails.firstName} ${personalDetails.lastName} | ${personalDetails.jobTitle}`;
const pageDescription = `${personalDetails.firstName} ${
  personalDetails.lastName
} | ${new Date().toLocaleDateString()} | Minimal Web Resume`;
const pageUrl = `https://cv.sead.dev`;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width" />
    <meta name="author" content="Sead Mulahasanović | Sead Dev" />
    <meta name="title" content={pageTitle} />
    <meta name="description" content={pageDescription} />

    <meta property="og:type" content="website" />
    <meta property="og:url" content=`${pageUrl}` />
    <meta property="og:title" content={pageTitle} />
    <meta property="og:description" content={pageDescription} />
    <meta property="og:image" content=`${pageUrl}/meta-cover.png` />

    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content="@sead1dev" />
    <meta name="twitter:creator" content="@sead1dev" />
    <meta property="twitter:title" content={pageTitle} />
    <meta property="twitter:url" content=`${pageUrl}` />
    <meta property="twitter:description" content={pageDescription} />
    <meta property="twitter:image" content=`${pageUrl}/meta-cover.png` />

    <meta name="generator" content={Astro.generator} />
    <title>{pageTitle}</title>
  </head>
  <body
    class="font-sans text-neutral-800 dark:text-neutral-200 lg:p-12 dark:bg-neutral-800"
  >
    <label
      for="options"
      class="fixed flex justify-center items-center pointer top-4 right-4 print:hidden text-neutral-800 bg-white size-16
    rounded-full shadow-md has-[:checked]:size-80 has-[:checked]:-top-40 has-[:checked]:-right-32 has-[:checked]:shadow-lg transition-all"
    >
      <input
        id="options"
        class="peer/options hidden"
        type="checkbox"
        name="options"
      />
      <div class="peer-checked/options:hidden">
        PDF
        <Icon size={14} name={"icon_link"} class="inline-block align-middle" />
      </div>
      <div
        class="fixed top-4 right-4 hidden peer-checked/options:block space-y-4"
      >
        <button class="block select-none" data-print-button type="button"
          >Print (Save as PDF)<Icon
            size={14}
            name={"icon_link"}
            class="inline-block align-middle"
          /></button
        >
        <a
          href="/Sead Mulahasanović - Software Developer - Resume.pdf"
          class="block select-none"
          download
        >
          Download PDF<Icon
            size={14}
            name={"icon_link"}
            class="inline-block align-middle"
          />
        </a>
      </div>
    </label>
    <main
      class="rounded-lg mx-auto my-auto max-w-4xl space-y-14 shadow-2xl p-16 print:shadow-none print:p-0 dark:bg-neutral-900"
    >
      <PersonalDetails {...personalDetails} />

      <Section title="Summary">
        Detail-oriented Software Developer with a decade of experience in
        diverse technologies, specializing in design, architecture,
        optimizations, and user experience. Proactive and dedicated to
        continuous learning.
      </Section>

      <Section title="Experience">
        {
          experiences.map((exp) => (
            <Entry
              {...exp.frontmatter}
              compiledContent={exp.compiledContent()}
            />
          ))
        }
      </Section>

      <Section title="Internships" visible={false}>
        {
          internships.map((internship) => (
            <Entry
              {...internship.frontmatter}
              compiledContent={internship.compiledContent()}
            />
          ))
        }
      </Section>

      <Section title="Education">
        {
          education.map((edu) => (
            <Entry
              {...edu.frontmatter}
              compiledContent={edu.compiledContent()}
            />
          ))
        }
      </Section>

      <Section title="Skills" visible={false}>
        <ul class="space-y-2 sm:columns-2">
          {skills.map((skill) => <Skill {...skill} />)}
        </ul>
      </Section>

      <Section title="Languages">
        <ul class="space-y-2 sm:columns-2">
          {languages.map((lang) => <Skill {...lang} />)}
        </ul>
      </Section>

      <Section title="Projects" className="break-before-page">
        {
          projects.map((p) => (
            <Entry {...p.frontmatter} compiledContent={p.compiledContent()} />
          ))
        }
      </Section>
    </main>
    <script>
      function isInApp(): boolean {
        const rules = [
          "WebView",
          "(iPhone|iPod|iPad)(?!.*Safari/)",
          "Android.*(wv)",
        ];
        const regex = new RegExp(`(${rules.join("|")})`, "ig");
        return Boolean(navigator.userAgent.match(regex));
      }

      const button = document.querySelector("[data-print-button]");

      if (!isInApp()) {
        button?.addEventListener("click", () => print());
      } else {
        button?.classList.add("hidden");
      }
    </script>
  </body>
</html>
